{"version":3,"sources":["Navbar.js","AnswerChoice.js","Question.js","Main.js","index.js"],"names":["Navbar","class","href","AnswerChoice","props","useState","color","setColor","useEffect","hooks","onClick","event","checkAnswer","disabled","choice","Question","blank_sentence","choices","answer","question","setQuestion","target","innerText","loadQuestion","fetch","then","res","json","data","catch","err","console","log","map","c","id","Main","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mKAsCeA,MAtCf,WACE,OACE,qBAAKC,MAAM,6DAAX,SACE,qBAAKA,MAAM,sBAAX,SACE,mBAAGA,MAAM,eAAeC,KAAK,IAA7B,+B,OCyBOC,MA3Bf,SAAsBC,GAEpB,IAAI,EAAoBC,mBAAS,aAAjC,mBAAKC,EAAL,KAAYC,EAAZ,KAcA,OAJAC,qBAAU,WACRD,EAAS,eACRH,EAAMK,OAGP,wBACER,MAAO,WAAaK,EAAQ,aAC5BI,QAhBJ,SAAqBC,GACfP,EAAMQ,YAAYD,GACpBJ,EAAS,WAETA,EAAS,WAaTM,SAAoB,cAAVP,EAHZ,SAKGF,EAAMU,UCqCEC,MA1Df,WAGE,MAAgCV,mBAAS,CACvCW,eAAgB,GAChBC,QAAS,GACTC,OAAQ,KAHV,mBAAOC,EAAP,KAAiBC,EAAjB,KAOA,SAASR,EAAYD,GACnB,OAAOA,EAAMU,OAAOC,YAAcH,EAASD,OAI7C,SAASK,IACPC,MAAM,iBACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLR,EAAYQ,MAEbC,OAAM,SAACC,GACNC,QAAQC,IAAIF,MAOlB,OAFAtB,oBAAUe,EAAc,IAGtB,gCACE,qBAAKtB,MAAM,4BAAX,SACE,sBAAKA,MAAM,YAAX,UACE,mBAAGA,MAAM,OAAT,SAAiBkB,EAASH,iBAC1B,oBAAIf,MAAM,SACV,qBAAKA,MAAM,sBAAX,SACGkB,EAASF,QAAQgB,KAAI,SAACC,GAAD,OACpB,cAAC,EAAD,CAEEpB,OAAQoB,EACRtB,YAAaA,EACbH,MAAO,CAACc,IAHHW,EAAEC,cASjB,qBAAKlC,MAAM,MAAX,SACE,qBAAKA,MAAM,MAAX,SACE,wBAAQA,MAAM,8BAA8BS,QAASa,EAArD,mCC1CKa,MARf,WACE,OACE,sBAAMnC,MAAM,+BAAZ,SACE,cAAC,EAAD,OCCNoC,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAAC,EAAD,IACA,cAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"js/main.75a540ce.chunk.js","sourcesContent":["function Navbar() {\n  return (\n    <nav class=\"navbar navbar-expand-lg navbar-dark bg-secondary fixed-top\">\n      <div class=\"container col-lg-12\">\n        <a class=\"navbar-brand\" href=\"/\">\n          VocabGREview\n        </a>\n        {/* <button\n          class=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span class=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul class=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" href=\"/\">\n                Some Page\n              </a>\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" href=\"/\">\n                Other Page\n              </a>\n            </li>\n          </ul>\n        </div> */}\n      </div>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","import { useState, useEffect } from \"react\";\r\n\r\nfunction AnswerChoice(props) {\r\n  // Handles checking of answer is correct whwn button is clicked\r\n  var [color, setColor] = useState(\"secondary\");\r\n  function handleClick(event) {\r\n    if (props.checkAnswer(event)) {\r\n      setColor(\"success\");\r\n    } else {\r\n      setColor(\"danger\");\r\n    }\r\n  }\r\n\r\n  // Whenever any function in props.hooks is called, color is reset\r\n  useEffect(() => {\r\n    setColor(\"secondary\");\r\n  }, props.hooks);\r\n\r\n  return (\r\n    <button\r\n      class={\"btn btn-\" + color + \" btn-block\"}\r\n      onClick={handleClick}\r\n      disabled={color !== \"secondary\"}\r\n    >\r\n      {props.choice}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default AnswerChoice;\r\n","import { useEffect, useState } from \"react\";\r\nimport AnswerChoice from \"./AnswerChoice\";\r\n\r\nfunction Question() {\r\n  // This might be kind of a hack, but it's the only way I found to prevent\r\n  // \"Cannot read property 'map' of undefined\" when trying to do question.choices.map.\r\n  const [question, setQuestion] = useState({\r\n    blank_sentence: \"\",\r\n    choices: [],\r\n    answer: \"\",\r\n  });\r\n\r\n  // This handles an answer choice being clicked by returning if the choice was correct\r\n  function checkAnswer(event) {\r\n    return event.target.innerText === question.answer;\r\n  }\r\n\r\n  // Calls API\r\n  function loadQuestion() {\r\n    fetch(\"/api/question\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setQuestion(data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  // Calls API on component load\r\n  useEffect(loadQuestion, []);\r\n\r\n  return (\r\n    <div>\r\n      <div class=\"jumbotron jumbotron-fluid\">\r\n        <div class=\"container\">\r\n          <p class=\"lead\">{question.blank_sentence}</p>\r\n          <hr class=\"my-4\" />\r\n          <div class=\"container col-lg-10\">\r\n            {question.choices.map((c) => (\r\n              <AnswerChoice\r\n                key={c.id}\r\n                choice={c}\r\n                checkAnswer={checkAnswer}\r\n                hooks={[loadQuestion]}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col\">\r\n          <button class=\"btn btn-secondary btn-block\" onClick={loadQuestion}>\r\n            Next Question\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Question;\r\n","import Question from \"./Question\";\r\n\r\nfunction Main() {\r\n  return (\r\n    <main class=\"container col-lg-8 my-5 py-5\">\r\n      <Question />\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport Navbar from \"./Navbar\";\nimport Main from \"./Main\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Navbar />\n    <Main />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}